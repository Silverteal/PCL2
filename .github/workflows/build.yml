# 定义工作流名称
name: Build PCL

# 定义触发条件
on:
  # 提交内容修改代码或编辑工作流文件时
  push:
    paths:
      - 'Plain Craft Launcher 2/**'
      - '.github/workflows/**'
  # 新的 PR 修改代码或编辑工作流文件时
  pull_request:
    paths:
      - 'Plain Craft Launcher 2/**'
      - '.github/workflows/**'
  # 手动触发时
  workflow_dispatch:

# 定义工作列表
jobs:
  # 唯一的工作：`build`

  build:
    strategy:
      # 定义矩阵，矩阵中每组都会单独执行，并使矩阵本身成为可用的上下文
      matrix: 
        # 五个编译选项
        configuration: [Debug, Release, Snapshot, BETA, ReleaseUpdate]

    # 显然，只有 Windows 才能构建 .NET Framework 程序
    runs-on: windows-latest

    # 定义步骤列表
    steps:

    # 签出仓库
    - name: Checkout
      # 调用 actions/checkout 仓库的调用预设工作流
      uses: actions/checkout@v4
      # 调用参数
      with:
        # 只签出第一层
        fetch-depth: 0

    # 导出提交散列值的短版本
    - name: Set commit hash short version
      shell: bash
      run: |
          ver_short=`git rev-parse --short HEAD`
          echo "VERSION=$ver_short" >> $GITHUB_ENV

    # 配置 MSBuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      with:
        # 生成工具使用 64 位架构
        msbuild-architecture: x64

    # 编译源代码
    - name: Build
      run: msbuild "Plain Craft Launcher 2\Plain Craft Launcher 2.vbproj" -p:Configuration=${{ matrix.configuration }}

    # 打包并上传编译产物
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        # 文件名格式示例：`PCL2_ga0b1c2d_Snapshot.zip`
        # `ga0b1c2d` 是提交散列值的短版本 (`g`+前七位)；`Snapshot` 为上文中的「编译选项」
        name: PCL2_g${{ env.VERSION }}_${{ matrix.configuration }}
        path: Plain Craft Launcher 2\obj\${{ matrix.configuration }}\Plain Craft Launcher 2.exe
